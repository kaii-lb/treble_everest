From 2f8b7f6bbbcd30282ef9b8100133f26670557da5 Mon Sep 17 00:00:00 2001
From: Pierre-Hugues Husson <phh@phh.me>
Date: Wed, 31 Mar 2021 23:32:37 +0200
Subject: [PATCH 03/10] Workaround device/phh/treble conflict with SELinux
 policy

device/phh/treble defines the following three types (hostapd,
sysfs_usb_supply, rpmb_device)
However, Qualcomm Samsung Android 11 devices export those symbols as
typealias.
Type and typealias are fundamentally not mergeable.
Luckily, Samsung doesn't do anything with those typealias, so we can
simply ignore them.
---
 libsepol/cil/src/cil_binary.c      |  8 ++++++--
 libsepol/cil/src/cil_build_ast.c   | 11 +++++++++--
 libsepol/cil/src/cil_resolve_ast.c | 15 +++++++++++++--
 3 files changed, 28 insertions(+), 6 deletions(-)

diff --git a/libsepol/cil/src/cil_binary.c b/libsepol/cil/src/cil_binary.c
index 40615db2..7d186515 100644
--- a/libsepol/cil/src/cil_binary.c
+++ b/libsepol/cil/src/cil_binary.c
@@ -509,17 +509,21 @@ int cil_typealias_to_policydb(policydb_t *pdb, struct cil_alias *cil_alias)
 	type_datum_t *sepol_type = NULL;
 	type_datum_t *sepol_alias = cil_malloc(sizeof(*sepol_alias));
 	type_datum_init(sepol_alias);
 
 	rc = __cil_get_sepol_type_datum(pdb, DATUM(cil_alias->actual), &sepol_type);
-	if (rc != SEPOL_OK) goto exit;
+	if (rc != SEPOL_OK) {
+        cil_log(CIL_ERR, "Failed at %s:%s:%d\n", __FILE__, __FUNCTION__, __LINE__);
+        goto exit;
+    }
 
 	sepol_alias->flavor = TYPE_TYPE;
 
 	key = cil_strdup(cil_alias->datum.fqn);
 	rc = symtab_insert(pdb, SYM_TYPES, key, sepol_alias, SCOPE_DECL, 0, NULL);
 	if (rc != SEPOL_OK) {
+		cil_log(CIL_ERR, "Failed at %s:%s:%d:%d\n", __FILE__, __FUNCTION__, __LINE__, rc);
 		goto exit;
 	}
 	sepol_alias->s.value = sepol_type->s.value;
 	sepol_alias->primary = 0;
 
@@ -3993,11 +3997,11 @@ static int __cil_node_to_policydb(struct cil_tree_node *node, void *extra_args)
 		break;
 	}
 
 exit:
 	if (rc != SEPOL_OK) {
-		cil_tree_log(node, CIL_ERR, "Binary policy creation failed");
+		cil_tree_log(node, CIL_ERR, "Binary policy creation failed, for pass = %d, flavor = %d", pass, node->flavor);
 	}
 	return rc;
 }
 
 static int __cil_binary_create_helper(struct cil_tree_node *node, uint32_t *finished, void *extra_args)
diff --git a/libsepol/cil/src/cil_build_ast.c b/libsepol/cil/src/cil_build_ast.c
index 960e3484..1cc3dfea 100644
--- a/libsepol/cil/src/cil_build_ast.c
+++ b/libsepol/cil/src/cil_build_ast.c
@@ -114,11 +114,11 @@ int cil_add_decl_to_symtab(struct cil_db *db, symtab_t *symtab, hashtab_key_t ke
 		return SEPOL_ERR;
 	}
 
 	rc = cil_symtab_insert(symtab, key, datum, node);
 	if (rc == SEPOL_EEXIST) {
-		struct cil_symtab_datum *prev;
+		struct cil_symtab_datum *prev = NULL;
 		rc = cil_symtab_get_datum(symtab, key, &prev);
 		if (rc != SEPOL_OK) {
 			cil_log(CIL_ERR, "Re-declaration of %s %s, but previous declaration could not be found\n",cil_node_to_string(node), key);
 			return SEPOL_ERR;
 		}
@@ -127,11 +127,18 @@ int cil_add_decl_to_symtab(struct cil_db *db, symtab_t *symtab, hashtab_key_t ke
 			struct cil_tree_node *n = NODE(prev);
 			cil_log(CIL_ERR, "Re-declaration of %s %s\n",
 				cil_node_to_string(node), key);
 			cil_tree_log(node, CIL_ERR, "Previous declaration of %s",
 				    cil_node_to_string(n));
-			return SEPOL_ERR;
+			if(
+				strcmp(key, "sysfs_usb_supply") == 0 ||
+				strcmp(key, "hostapd") == 0 ||
+				strcmp(key, "rpmb_device") == 0) {
+					cil_log(CIL_ERR, "Ignoring...");
+			} else {
+				return SEPOL_ERR;
+			}			
 		}
 		/* multiple_decls is enabled and works for this datum type, add node */
 		cil_list_append(prev->nodes, CIL_NODE, node);
 		node->data = prev;
 		return SEPOL_EEXIST;
diff --git a/libsepol/cil/src/cil_resolve_ast.c b/libsepol/cil/src/cil_resolve_ast.c
index 91fa1075..f806cbc2 100644
--- a/libsepol/cil/src/cil_resolve_ast.c
+++ b/libsepol/cil/src/cil_resolve_ast.c
@@ -520,11 +520,17 @@ static int cil_resolve_aliasactual(struct cil_tree_node *current, void *extra_ar
 	if (rc != SEPOL_OK) {
 		goto exit;
 	}
 	if (FLAVOR(alias_datum) != alias_flavor) {
 		cil_log(CIL_ERR, "%s is not an alias\n",alias_datum->name);
-		rc = SEPOL_ERR;
+		if(
+			strcmp(alias_datum->name, "hostapd") == 0 ||
+			strcmp(alias_datum->name, "sysfs_usb_supply") == 0 ||
+			strcmp(alias_datum->name, "rpmb_device") == 0)
+				rc = 0;
+			else
+				rc = SEPOL_ERR;		
 		goto exit;
 	}
 
 	rc = cil_resolve_name(current, aliasactual->actual_str, sym_index, extra_args, &actual_datum);
 	if (rc != SEPOL_OK) {
@@ -561,11 +567,16 @@ static int cil_resolve_alias_to_actual(struct cil_tree_node *current, enum cil_f
 	struct cil_tree_node *a1_node = NULL;
 	int steps = 0;
 	int limit = 2;
 
 	if (alias->actual == NULL) {
-		cil_tree_log(current, CIL_ERR, "Alias declared but not used");
+		cil_tree_log(current, CIL_ERR, "Alias %s declared but not used", a1->datum.name);
+		if(
+			strcmp(a1->datum.name, "hostapd") == 0 ||
+			strcmp(a1->datum.name, "sysfs_usb_supply") == 0 ||
+			strcmp(a1->datum.name, "rpmb_device") == 0)
+				return SEPOL_OK;
 		return SEPOL_ERR;
 	}
 
 	a1_node = a1->datum.nodes->head->data;
 
-- 
2.45.1
